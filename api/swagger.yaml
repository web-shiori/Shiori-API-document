---
swagger: "2.0"
info:
  description: "Web-Shiori API document"
  version: "1.0.1"
  title: "Web-Shiori API"
  contact:
    email: "shiori.web.forsafari@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/Web-Shiori/Web-Shiori/1.0.1"
tags:
- name: "auth"
  description: "認証関連API"
- name: "content"
  description: "コンテンツ関連API"
- name: "folder"
  description: "フォルダ関連API"
schemes:
- "https"
- "http"
paths:
  /v1/auth:
    post:
      tags:
      - "auth"
      summary: "会員登録用API"
      description: "会員登録します。\n email, password, password_confirmationをリクエストで受け取り、ユ\
        ーザと認証用のトークンを生成します。"
      operationId: "v1AuthPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/AuthRequest"
      responses:
        "200":
          description: "A successful response."
          headers:
            access-token:
              type: "string"
              description: "access-token"
            client:
              type: "string"
              description: "client"
            uid:
              type: "string"
              description: "uid"
          schema:
            $ref: "#/definitions/AuthResponse"
      x-swagger-router-controller: "Auth"
  /v1/auth/sign_in:
    post:
      tags:
      - "auth"
      summary: "ログイン用API"
      description: "ログインします。\n email, passwordをリクエストで受け取り、ユーザと認証用のトークンを生成します。"
      operationId: "v1AuthSign_inPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: "A successful response."
          headers:
            access-token:
              type: "string"
              description: "access-token"
            client:
              type: "string"
              description: "client"
            uid:
              type: "string"
              description: "uid"
          schema:
            $ref: "#/definitions/LoginResponse"
      x-swagger-router-controller: "Auth"
  /v1/auth/google_oauth2:
    get:
      tags:
      - "auth"
      summary: "Googleログイン用API"
      description: ""
      operationId: "v1AuthGoogle_oauth2GET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          headers:
            access-token:
              type: "string"
              description: "access-token"
            client:
              type: "string"
              description: "client"
            uid:
              type: "string"
              description: "uid"
      x-swagger-router-controller: "Auth"
  /omniauth/google_oauth2/callback:
    get:
      tags:
      - "auth"
      summary: "Googleの認証が終わった際にリダイレクトされてくるAPI"
      description: "クライアントが直接叩くことはない"
      operationId: "omniauthGoogle_oauth2CallbackGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
      x-swagger-router-controller: "Auth"
  /v1/auth/twitter:
    get:
      tags:
      - "auth"
      summary: "Twitterログイン用API"
      description: ""
      operationId: "v1AuthTwitterGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          headers:
            access-token:
              type: "string"
              description: "access-token"
            client:
              type: "string"
              description: "client"
            uid:
              type: "string"
              description: "uid"
      x-swagger-router-controller: "Auth"
  /omniauth/twitter/callback:
    get:
      tags:
      - "auth"
      summary: "Twitterの認証が終わった際にリダイレクトされてくるAPI"
      description: "クライアントが直接叩くことはない"
      operationId: "omniauthTwitterCallbackGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
      x-swagger-router-controller: "Auth"
  /v1/auth/github:
    get:
      tags:
      - "auth"
      summary: "Githubログイン用API"
      description: ""
      operationId: "v1AuthGithubGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          headers:
            access-token:
              type: "string"
              description: "access-token"
            client:
              type: "string"
              description: "client"
            uid:
              type: "string"
              description: "uid"
      x-swagger-router-controller: "Auth"
  /omniauth/github/callback:
    get:
      tags:
      - "auth"
      summary: "Githubの認証が終わった際にリダイレクトされてくるAPI"
      description: "クライアントが直接叩くことはない"
      operationId: "omniauthGithubCallbackGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A successful response."
      x-swagger-router-controller: "Auth"
  /v1/content:
    get:
      tags:
      - "content"
      summary: "コンテンツ一覧取得API"
      description: "コンテンツ一覧を取得します。"
      operationId: "v1ContentGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - name: "q"
        in: "query"
        description: "検索クエリ"
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "取得数。デフォルトは50"
        required: false
        type: "integer"
        format: "int64"
      - name: "page"
        in: "query"
        description: "取得位置。デフォルトは1"
        required: false
        type: "integer"
        format: "int64"
      - name: "liked"
        in: "query"
        description: "お気に入り"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ContentListResponse"
      x-swagger-router-controller: "Content"
    post:
      tags:
      - "content"
      summary: "コンテンツ保存API"
      description: "コンテンツ保存API"
      operationId: "v1ContentPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/ContentCreateRequest"
      responses:
        "201":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ContentCreateResponse"
      x-swagger-router-controller: "Content"
  /v1/content/{content_id}:
    put:
      tags:
      - "content"
      summary: "コンテンツ情報更新API"
      description: ""
      operationId: "v1ContentContent_idPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "content_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/ContentUpdateRequest"
      responses:
        "204":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ContentUpdateResponse"
      x-swagger-router-controller: "Content"
    delete:
      tags:
      - "content"
      summary: "コンテンツ削除API"
      description: ""
      operationId: "v1ContentContent_idDELETE"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "content_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      responses:
        "204":
          description: "A successful response."
      x-swagger-router-controller: "Content"
  /v1/folder:
    get:
      tags:
      - "folder"
      summary: "フォルダ一覧取得API"
      description: ""
      operationId: "v1FolderGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/FolderListResponse"
      x-swagger-router-controller: "Folder"
    post:
      tags:
      - "folder"
      summary: "フォルダ作成API"
      description: ""
      operationId: "v1FolderPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/FolderCreateRequest"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/FolderCreateResponse"
      x-swagger-router-controller: "Folder"
  /v1/folder/{folder_id}:
    put:
      tags:
      - "folder"
      summary: "フォルダ情報更新API"
      description: ""
      operationId: "v1FolderFolder_idPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "folder_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request Body"
        required: true
        schema:
          $ref: "#/definitions/FolderUpdateRequest"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/FolderUpdateResponse"
      x-swagger-router-controller: "Folder"
    delete:
      tags:
      - "folder"
      summary: "フォルダ削除API"
      description: ""
      operationId: "v1FolderFolder_idDELETE"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "folder_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      responses:
        "204":
          description: "A successful response."
      x-swagger-router-controller: "Folder"
  /v1/folder/{folder_id}/content:
    get:
      tags:
      - "folder"
      summary: "フォルダ内コンテンツ一覧取得API"
      description: ""
      operationId: "v1FolderFolder_idContentGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "folder_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      - name: "q"
        in: "query"
        description: "検索クエリ"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "取得数。デフォルトは50"
        required: false
        type: "integer"
        format: "int64"
      - name: "offset"
        in: "query"
        description: "取得位置。デフォルトは0"
        required: false
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/FolderContentGetResponse"
      x-swagger-router-controller: "Folder"
  /v1/folder/{folder_id}/content/{content_id}:
    post:
      tags:
      - "folder"
      summary: "フォルダにコンテンツを追加するAPI"
      description: ""
      operationId: "v1FolderFolder_idContentContent_idPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "folder_id"
        in: "path"
        required: true
        type: "integer"
      - name: "content_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      responses:
        "204":
          description: "A successful response."
      x-swagger-router-controller: "Folder"
    delete:
      tags:
      - "folder"
      summary: "フォルダからコンテンツを削除するAPI"
      description: ""
      operationId: "v1FolderFolder_idContentContent_idDELETE"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "folder_id"
        in: "path"
        required: true
        type: "integer"
      - name: "content_id"
        in: "path"
        required: true
        type: "integer"
      - name: "access-token"
        in: "header"
        description: "アクセストークン"
        required: true
        type: "string"
      - name: "client"
        in: "header"
        description: "client"
        required: true
        type: "string"
      - name: "uid"
        in: "header"
        description: "uid"
        required: true
        type: "string"
      responses:
        "204":
          description: "A successful response."
      x-swagger-router-controller: "Folder"
definitions:
  AuthRequest:
    type: "object"
    properties:
      email:
        type: "string"
        description: "メールアドレス"
      password:
        type: "string"
        description: "パスワード"
      password_confirmation:
        type: "string"
        description: "パスワード(確認用)"
    example:
      password: "password"
      password_confirmation: "password_confirmation"
      email: "email"
  AuthResponse:
    type: "object"
    properties:
      status:
        type: "string"
        example: "success"
        description: "status"
      data:
        $ref: "#/definitions/User"
    example:
      data:
        uid: "example@example.com"
        updated_at: "2019-05-12T20:48:24.000+09:00"
        provider: "email"
        created_at: "2019-05-12T20:48:24.000+09:00"
        id: 126
        allow_password_change: false
        email: "example2@example.com"
      status: "success"
  LoginRequest:
    type: "object"
    properties:
      email:
        type: "string"
        description: "メールアドレス"
      password:
        type: "string"
        description: "パスワード"
    example:
      password: "password"
      email: "email"
  LoginResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/User"
    example:
      data:
        uid: "example@example.com"
        updated_at: "2019-05-12T20:48:24.000+09:00"
        provider: "email"
        created_at: "2019-05-12T20:48:24.000+09:00"
        id: 126
        allow_password_change: false
        email: "example2@example.com"
  ContentListResponse:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/MetaData"
      data:
        type: "object"
        properties:
          content:
            type: "array"
            items:
              $ref: "#/definitions/Content"
    example:
      data: "{}"
      meta:
        q: ""
        per_page: 50
        nextPage: 2
        page: 1
        liked: true
  ContentCreateRequest:
    type: "object"
    properties:
      title:
        type: "string"
        example: "日向坂で会いましょう"
        description: "title"
      url:
        type: "string"
        example: "https://hinatasaka.com"
        description: "url"
      file:
        type: "string"
        description: "fileをアップロードしたいけどtypeにfileがない。別エンドポイントを作らないといけない？"
      scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "scroll_position_x"
      scroll_position_y:
        type: "integer"
        format: "int64"
        example: 200
        description: "scroll_position_y"
      max_scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "max_scroll_position_x"
      max_scroll_position_y:
        type: "integer"
        format: "int64"
        example: 10000
        description: "max_scroll_position_y"
      video_playback_position:
        type: "integer"
        format: "int64"
        example: 500
        description: "video_playback_position"
      specified_text:
        type: "string"
        description: "specified_text"
      specified_dom_id:
        type: "string"
        description: "specified_dom_id"
      specified_dom_class:
        type: "string"
        description: "specified_dom_class"
      specified_dom_tag:
        type: "string"
        description: "specified_dom_tag"
    example:
      video_playback_position: 500
      specified_dom_id: "specified_dom_id"
      file: "file"
      specified_dom_class: "specified_dom_class"
      max_scroll_position_y: 10000
      specified_text: "specified_text"
      scroll_position_y: 200
      scroll_position_x: 0
      max_scroll_position_x: 0
      title: "日向坂で会いましょう"
      specified_dom_tag: "specified_dom_tag"
      url: "https://hinatasaka.com"
  ContentCreateResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Content"
    example:
      data:
        file_url: "file_url"
        specified_dom_id: "specified_dom_id"
        max_scroll_position_y: 1000
        created_at: "2019-05-12T20:48:24.000+09:00"
        scroll_position_y: 500
        thumbnail_img_url: "https://i.ytimg.com/vi/xP_Ovd8-GM8/maxresdefault.jpg"
        scroll_position_x: 0
        max_scroll_position_x: 0
        title: "Web-Shioriデモ動画"
        deleted_at: "2000-01-23T04:56:07.000+00:00"
        url: "https://www.youtube.com/watch?v=1DcjMwkmNvA"
        sharing_url: "https://universal_link.hinatasaka.com"
        liked: true
        video_playback_position: 50
        content_type: "web"
        specified_dom_class: "specified_dom_class"
        updated_at: "2019-05-12T20:48:24.000+09:00"
        specified_text: "specified_text"
        id: 126
        delete_flag: false
        specified_dom_tag: "specified_dom_tag"
  ContentUpdateRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 126
        description: "コンテンツid"
      title:
        type: "string"
        example: "日向坂で会いましょう"
        description: "title"
      url:
        type: "string"
        example: "https://hinatasaka.com"
        description: "url"
      file:
        type: "string"
        description: "fileをアップロードしたいけどtypeにfileがない。別エンドポイントを作らないといけない？"
      scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "scroll_position_x"
      scroll_position_y:
        type: "integer"
        format: "int64"
        example: 200
        description: "scroll_position_y"
      max_scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "max_scroll_position_x"
      max_scroll_position_y:
        type: "integer"
        format: "int64"
        example: 10000
        description: "max_scroll_position_y"
      video_playback_position:
        type: "integer"
        format: "int64"
        example: 500
        description: "video_playback_position"
      specified_text:
        type: "string"
        description: "specified_text"
      specified_dom_id:
        type: "string"
        description: "specified_dom_id"
      specified_dom_class:
        type: "string"
        description: "specified_dom_class"
      specified_dom_tag:
        type: "string"
        description: "specified_dom_tag"
      liked:
        type: "boolean"
        example: true
        description: "お気に入り"
    example:
      specified_dom_id: "specified_dom_id"
      max_scroll_position_y: 10000
      scroll_position_y: 200
      scroll_position_x: 0
      max_scroll_position_x: 0
      title: "日向坂で会いましょう"
      url: "https://hinatasaka.com"
      liked: true
      video_playback_position: 500
      file: "file"
      specified_dom_class: "specified_dom_class"
      specified_text: "specified_text"
      id: 126
      specified_dom_tag: "specified_dom_tag"
  ContentUpdateResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Content"
    example:
      data:
        file_url: "file_url"
        specified_dom_id: "specified_dom_id"
        max_scroll_position_y: 1000
        created_at: "2019-05-12T20:48:24.000+09:00"
        scroll_position_y: 500
        thumbnail_img_url: "https://i.ytimg.com/vi/xP_Ovd8-GM8/maxresdefault.jpg"
        scroll_position_x: 0
        max_scroll_position_x: 0
        title: "Web-Shioriデモ動画"
        deleted_at: "2000-01-23T04:56:07.000+00:00"
        url: "https://www.youtube.com/watch?v=1DcjMwkmNvA"
        sharing_url: "https://universal_link.hinatasaka.com"
        liked: true
        video_playback_position: 50
        content_type: "web"
        specified_dom_class: "specified_dom_class"
        updated_at: "2019-05-12T20:48:24.000+09:00"
        specified_text: "specified_text"
        id: 126
        delete_flag: false
        specified_dom_tag: "specified_dom_tag"
  LikedContentListResponse:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/MetaData"
      data:
        type: "object"
        properties:
          content:
            type: "array"
            items:
              $ref: "#/definitions/Content"
  LikedResponse:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          liked:
            type: "boolean"
            example: true
            description: "liked"
  FolderListResponse:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          folder:
            type: "array"
            items:
              $ref: "#/definitions/Folder"
    example:
      data: "{}"
  FolderContentGetResponse:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/MetaData"
      data:
        type: "object"
        properties:
          folder:
            $ref: "#/definitions/Folder"
          content:
            type: "array"
            items:
              $ref: "#/definitions/Content"
    example:
      data: "{}"
      meta:
        q: ""
        per_page: 50
        nextPage: 2
        page: 1
        liked: true
  FolderCreateRequest:
    type: "object"
    properties:
      name:
        type: "string"
        description: "フォルダ名"
    example:
      name: "name"
  FolderCreateResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Folder"
    example:
      data:
        name: "動画"
        id: 1
        content_count: 10
  FolderUpdateRequest:
    type: "object"
    properties:
      name:
        type: "string"
        description: "フォルダ名"
    example:
      name: "name"
  FolderUpdateResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Folder"
    example:
      data:
        name: "動画"
        id: 1
        content_count: 10
  MetaData:
    type: "object"
    properties:
      q:
        type: "string"
        example: ""
        description: "検索クエリ"
      per_page:
        type: "integer"
        format: "int64"
        example: 50
        description: "取得数"
      page:
        type: "integer"
        format: "int64"
        example: 1
        description: "取得位置(1から)"
      nextPage:
        type: "integer"
        example: 2
        description: "次のページ数"
      liked:
        type: "boolean"
        example: true
        description: "お気に入りのコンテンツのみ取得しているか"
    example:
      q: ""
      per_page: 50
      nextPage: 2
      page: 1
      liked: true
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 126
        description: "ユーザid"
      provider:
        type: "string"
        example: "email"
        description: "provider"
      uid:
        type: "string"
        example: "example@example.com"
        description: "uid"
      allow_password_change:
        type: "boolean"
        example: false
        description: "allow_password_change"
      email:
        type: "string"
        example: "example2@example.com"
        description: "email"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-05-12T20:48:24.000+09:00"
        description: "created_at"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-05-12T20:48:24.000+09:00"
        description: "updated_at"
    example:
      uid: "example@example.com"
      updated_at: "2019-05-12T20:48:24.000+09:00"
      provider: "email"
      created_at: "2019-05-12T20:48:24.000+09:00"
      id: 126
      allow_password_change: false
      email: "example2@example.com"
  Content:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 126
        description: "コンテンツid"
      content_type:
        type: "string"
        example: "web"
        description: "type"
      title:
        type: "string"
        example: "Web-Shioriデモ動画"
        description: "title"
      url:
        type: "string"
        example: "https://www.youtube.com/watch?v=1DcjMwkmNvA"
        description: "url"
      sharing_url:
        type: "string"
        example: "https://universal_link.hinatasaka.com"
        description: "sharing_url"
      file_url:
        type: "string"
        description: "file_url"
      thumbnail_img_url:
        type: "string"
        example: "https://i.ytimg.com/vi/xP_Ovd8-GM8/maxresdefault.jpg"
        description: "サムネイル画像url"
      scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "scroll_position_x"
      scroll_position_y:
        type: "integer"
        format: "int64"
        example: 500
        description: "scroll_position_y"
      max_scroll_position_x:
        type: "integer"
        format: "int64"
        example: 0
        description: "max_scroll_position_x"
      max_scroll_position_y:
        type: "integer"
        format: "int64"
        example: 1000
        description: "max_scroll_position_y"
      video_playback_position:
        type: "integer"
        format: "int64"
        example: 50
        description: "video_playback_position"
      specified_text:
        type: "string"
        description: "specified_text"
      specified_dom_id:
        type: "string"
        description: "specified_dom_id"
      specified_dom_class:
        type: "string"
        description: "specified_dom_class"
      specified_dom_tag:
        type: "string"
        description: "specified_dom_tag"
      liked:
        type: "boolean"
        example: true
        description: "liked"
      delete_flag:
        type: "boolean"
        example: false
        description: "削除されたかどうか。削除から30日間は復元できるようにするために保持する。"
      deleted_at:
        type: "string"
        format: "date-time"
        description: "deleted_at"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-05-12T20:48:24.000+09:00"
        description: "created_at"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-05-12T20:48:24.000+09:00"
        description: "updated_at"
    example:
      file_url: "file_url"
      specified_dom_id: "specified_dom_id"
      max_scroll_position_y: 1000
      created_at: "2019-05-12T20:48:24.000+09:00"
      scroll_position_y: 500
      thumbnail_img_url: "https://i.ytimg.com/vi/xP_Ovd8-GM8/maxresdefault.jpg"
      scroll_position_x: 0
      max_scroll_position_x: 0
      title: "Web-Shioriデモ動画"
      deleted_at: "2000-01-23T04:56:07.000+00:00"
      url: "https://www.youtube.com/watch?v=1DcjMwkmNvA"
      sharing_url: "https://universal_link.hinatasaka.com"
      liked: true
      video_playback_position: 50
      content_type: "web"
      specified_dom_class: "specified_dom_class"
      updated_at: "2019-05-12T20:48:24.000+09:00"
      specified_text: "specified_text"
      id: 126
      delete_flag: false
      specified_dom_tag: "specified_dom_tag"
  Folder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
        description: "フォルダid"
      name:
        type: "string"
        example: "動画"
        description: "フォルダ名"
      content_count:
        type: "integer"
        format: "int64"
        example: 10
        description: "フォルダに含まれているコンテンツの数"
    example:
      name: "動画"
      id: 1
      content_count: 10
